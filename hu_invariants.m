function [ invariants ] = hu_invariants( a )
% HU_MOMENT Calculates the 7 Hu moment invariants of an image
%   Given a 2D grayscale figure A, calculate the 7 Hu moment invariants
%   
    f1 = standardized_moment(a, 2, 0) + standardized_moment(a, 0, 2);
    
    f2 = (standardized_moment(a, 2, 0) - standardized_moment(a, 0, 2))^2 + 4 * (standardized_moment(a,1,1)^2);
    
    f3 = (standardized_moment(a, 3, 0) - 3 * standardized_moment(a, 1, 2))^2 + ...
         (3 * standardized_moment(a, 2, 1) - standardized_moment(a, 0, 3))^2;
    
    invariants = [f1 f2 f3];
    
%     f4 = (standardized_moment(a, 3, 0) - standardized_moment(a, 1, 2))^2 + ...
%          (standardized_moment(a, 2, 1) - standardized_moment(a, 0, 3))^2;
% 
%     f5 = (standardized_moment(a, 3, 0) - 3 * standardized_moment(a, 1, 2)) * ...
%          (standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2)) * ...
%          ((standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2))^2 - ...
%          3 * (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3))^2) + ...
%          (3 * standardized_moment(a, 2, 1) - standardized_moment(a, 0, 3)) * ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3)) * ...
%          (3 * (standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2))^2 - ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3))^2);
% 
%     f6 = (standardized_moment(a, 2, 0) - standardized_moment(a, 0, 2)) * ...
%          ((standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2))^2 - ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3))^2) + ...
%          4 * standardized_moment(a, 1, 1) * (standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2)) * ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3));
% 
%     f7 = (3*standardized_moment(a, 2, 1) - standardized_moment(a, 0, 3)) * ...
%          (standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2)) * ...
%          ((standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2))^2 - ...
%          3*(standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3))^2) - ...
%          (standardized_moment(a, 3, 0) - 3*standardized_moment(a, 1, 2)) * ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3)) * ...
%          (3*(standardized_moment(a, 3, 0) + standardized_moment(a, 1, 2))^2 - ...
%          (standardized_moment(a, 2, 1) + standardized_moment(a, 0, 3))^2);
        
end